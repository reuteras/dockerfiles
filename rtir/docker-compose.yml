---

services:

  caddy:
    image: caddy:2.8-alpine
    restart: unless-stopped
    ports:
      - "443:443"
      - "443:443/udp"
    depends_on:
      rt:
        condition: service_started
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config

  db:
    container_name: db
    image: postgres:16-alpine
    restart: unless-stopped
    env_file:
      - ./rt/.env
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 10s

  rt:
    container_name: rt
    image: reuteras/container-rt:latest
    build:
      context:
        ./rt
    restart: unless-stopped
    env_file:
      - ./rt/.env
    volumes:
      - ./rt/files:/data:ro
      - ./cert:/etc/letsencrypt
    depends_on:
      db:
        condition: service_healthy
    networks:
      - frontend
      - backend

  cron:
    container_name: cron
    build:
      context:
        ./cron
    restart: unless-stopped
    env_file:
      - ./rt/.env
    ports:
      - "80:8080"
    volumes:
      - ./cert:/etc/letsencrypt
      - backup:/backup
    depends_on:
      db:
        condition: service_healthy
      rt:
        condition: service_started
    networks:
      - backend

volumes:
  backup:
  caddy_data:
  caddy_config:
  db:

networks:
  frontend:
    name: frontend
  backend:
    name: backend
